// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// buildStrataDFSpatial
DataFrame buildStrataDFSpatial(DataFrame dataset, NumericVector fitting, NumericVector range, double kappa, bool progress, bool verbose);
RcppExport SEXP _SamplingStrata_buildStrataDFSpatial(SEXP datasetSEXP, SEXP fittingSEXP, SEXP rangeSEXP, SEXP kappaSEXP, SEXP progressSEXP, SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< DataFrame >::type dataset(datasetSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type fitting(fittingSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type range(rangeSEXP);
    Rcpp::traits::input_parameter< double >::type kappa(kappaSEXP);
    Rcpp::traits::input_parameter< bool >::type progress(progressSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    rcpp_result_gen = Rcpp::wrap(buildStrataDFSpatial(dataset, fitting, range, kappa, progress, verbose));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SamplingStrata_buildStrataDFSpatial", (DL_FUNC) &_SamplingStrata_buildStrataDFSpatial, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_SamplingStrata(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
